#!/usr/env/bin roseus
(require :fetch-interface "package://fetcheus/fetch-interface.l")
(load "package://jsk_maps/src/change-floor.l")
(load "package://jsk_fetch_startup/euslisp/navigation-utils.l")
(load "package://jsk_2020_11_fetch_and_spot_go_to_kitchen_car/euslisp/elevator-action.l")
(load "package://jsk_2020_11_fetch_and_spot_go_to_kitchen_car/euslisp/utils.l")

(ros::load-ros-manifest "geometry_msgs")
(ros::advertise "/initialpose" geometry_msgs::PoseWithCovarianceStamped 1)

;; auto-door-coords
(setq *3f-auto-door-1* (make-coords :pos #f(10574 -27843 0) :rpy (float-vector 0 0 0)))
(setq *3f-auto-door-2* (make-coords :pos #f(20627 -32752 0) :rpy (float-vector 0 0 0)))
(setq *3f-auto-door-3* (make-coords :pos #f(22627 -32752 0) :rpy (float-vector pi 0 0)))
(setq *3f-auto-door-4* (make-coords :pos #f(12574 -27843 0) :rpy (float-vector pi 0 0)))

;; define movements
(defun go-to-3f-auto-door(floor)
  (send *ri* :clear-costmap)
  (send *ri* :speak-jp (concatenate string (string floor) "番目の自動ドアに向かいます") :wait t)  
  ;; when going autodoor 2 and 4
  ;; global-inflater-rad 0.7 -> 0.3
  ;; local-inflater-rad 0.7 -> 0.3
  ;; max-vel-x 0.5 -> 0.6
  ;; min-vel-x 0.1 -> 0.3
  (cond ((= floor 1)
		 (send *ri* :move-to *3f-auto-door-1* :frame-id "/map"))
		((= floor 2)
		 (change-dynamic-param 0.3 0.3)
		 (send *ri* :move-to *3f-auto-door-2* :frame-id "/map")
		 (change-dynamic-param))
		((= floor 3)
		 (send *ri* :move-to *3f-auto-door-3* :frame-id "/map"))
		((= floor 4)
		 (change-dynamic-param 0.3 0.3)
		 (send *ri* :move-to *3f-auto-door-4* :frame-id "/map")
		 (change-dynamic-param)))
  )

(defun go-through-3f-auto-door()
  (change-dynamic-param 0.3 0.3 0.6 0.3)
  (send *ri* :go-pos 2 0 0)
  (change-dynamic-param)
  )

(defun go-to-office-kyoin()
  (send *ri* :clear-costmap)
  (send *ri* :speak-jp "事務室にむかいます" :wait t)
  (send *ri* :move-to (make-coords :pos #f(51100 -29876 0) :rpy (float-vector 0 0 0)) :frame-id "/map")
  )

(defun office-only-demo()
  (undock)
  (go-to-current-floor-elevator-hall)
  (get-on-and-off-eng2-elevator (get-current-floor) 3)
  (go-to-3f-auto-door 1)
  (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください" :wait t)
  (wait-for-julius-trigger "すすんで")
  (send *ri* :speak-jp "すすみます" :wait t)
  (go-through-3f-auto-door)
  (go-to-3f-auto-door 2)
  (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください" :wait t)
  (wait-for-julius-trigger "すすんで")
  (go-through-3f-auto-door)
  (go-to-office-kyoin)
  (send *ri* :speak-jp "届け物をしにきました" :wait t)
  (send *ri* :speak-jp "受け取ったら，ありがとうと言ってください" :wait t)
  (wait-for-julius-trigger "ありがとう")
  (send *ri* :speak-jp "どういたしまして" :wait t)
  (go-to-3f-auto-door 3)
  (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください" :wait t)
  (wait-for-julius-trigger "すすんで")
  (go-through-3f-auto-door)
  (go-to-3f-auto-door 4)
  (send *ri* :speak-jp "自動ドアがあいたらすすんでと言ってください" :wait t)
  (wait-for-julius-trigger "すすんで")
  (go-through-3f-auto-door)
  (go-to-current-floor-elevator-hall)
  (get-on-and-off-eng2-elevator (get-current-floor) 7)
  (send *ri* :speak-jp "ドックに戻ります" :wait t)
  (auto-dock)
  )
